Matlab Version used for the Project: MATLAB 2018a

Add on used in this project:

1. Simulink support package for arduino hardware
2. Simulink support for Liquid Crystal Display
3. SImulink support for Arduino sensors

Pin connection : 

DC motor: 			Arduino digital pin 11 and 10
LED :	  			Arduino digital pin 2
Ultrasonic Sensor Trigger: 	Arduino digital pin 9
Ultrasonic Sensor Echo: 	Arduino digital pin 8
LCD RS:				Arduino digital pin 13
LCD En:				Arduino digital pin 12
LCD D0:				Arduino digital pin 6
LCD D1:				Arduino digital pin 5
LCD D2:				Arduino digital pin 4
LCD D3:				Arduino digital pin 3
Servo motor:			Arduino digital pin 7


Matlab functions’ explanation:
Obstacle avoiding robot has total 6 user defined matlab functions and their explanation has given below:

DC motor on/off:
This function takes care of turning the DC motor on and off. It takes A data store’s value and changes the value of arduino digital pin 11 according to condition. If the value of A is 2, which means the robot is going forward and we have to keep the DC motor on. So, it changes the Arduino digital pin’s value to 1 and if  the value of A is other than 2, then we have to turn the DC motor off by changing the digital pin’s value to 0.

LED on/off:
This function takes A’s value as input and turns the LED light on or off according to condition. 
If the value of A is 2, then the value of the Arduino digital pin 2 will be 0, which means the LED is off and the robot is going forward.
If the value of A is other than 2, then the LED will be turned on and show that the robot is turning left or right randomly.

Object Detect and Change A:
This function is the core of the project. It takes 4 inputs and they are A, B, uniform random number generator and the ultrasonic sensor’s reading. It changes the value of A and B according to conditions and outputs them into A and B data store write.
If the object is detected in less than 10 cm, then this function takes a random number between 0 and 1 and stores it into data store memory A by checking the value of B.
If the value of B is 0, which means we have to change the value of A by taking the random number generated by the Uniform random number generator block and change the value of B to 1.
If the value of B is 1 and the object is detected in less than 10 cm then we will take the previously generated random number and change the value of B to 1.
If the object is not detected then we will have to change the value of A into 2, which shows that object is not detected and we will also change the value of B to 0, which shows that next if object is detected then change the value of A. 

Display Speed and Alert:
This function displays the first line of LCD display. It takes 1 input of the value of A and according to condition print the instructions.
If the value of A is 2, which means the robot is going forward and when it is going forward we will print “DC motor RPM” in first line of LCD and LCD takes only uint8 data type as input we convert the sentence to unit8 by writing uint8(‘DC motor RPM’).
If the value of A is other than 2, which means the robot is turning left or right randomly and we will print “ALERT!!” in the first line of LCD by typing unit8(‘ALERT!!’) to convert it into an unsigned integer. 

Display RPM and left or right:
This function displays the second line of LCD display by taking the value of A as input. To print in the LCD we have to convert the sentences into uint8 format. 
If the value of A is 2, which means the robot is going forward then we will print the RPM of the motor by typing uint8(‘300’). 
If the value of A is less than 0.5, which means the robot is turning left, then we will print “Turning Left” by typing uint8(‘Turning Left’).
If the value of A is greater than 0.5 and less than 1 then we will print “Turning right” by typing uint8(‘Turning Right’).

Servo Motor Position:
This function changes the position of the shaft of the servo motor. Servo motor can rotate between 0 and 180 degrees by writing into pin 7 of standard servo write.
If the value of A is 2, which means the robot is going forward, then the servo motor’s  arm will be at 90 degree position, so we write 90 in output.
If the value of A is less than 0.5, which means the robot is turning left, so we will write the value 0 in output and the servo motor’s arm will be at 0 degree.
If the value of A is greater than 0.5 and less than 1, which means the robot is turning left and in this condition we will change the value of the servo motor to 180 degree by writing value 180 in output.

Code : 

DC Motor On/off function:
function y = fcn(A)
if A==2
    y =1;
else
    y =0;
end
___________________________________________________________________________________________________________________

LED on/off function:
function y = fcn(A)
if A == 2
    y = 0;
else
 	    y= 1;
end
_____________________________________________________________________________________________________________________

Object detect and change A function:
function [data2, y]= fcn( B, A, random, distance)
if  distance < 0.10
    if B == 0
        y = random;
        data2 = 1;
    else
        y = A;
        data2 = 1;
    end
else
    y = 2;
    data2 = 0;   
end
________________________________________________________________________________________________________________________

Display speed and alert function:
function y = fcn(u)
if u == 2
    y =uint8('DC Motor RPM');
else
    y = uint8('ALERT!!     ');    
end
___________________________________________________________________________________________________________________________

Display RPM, left and right function:
function y = fcn(u)
if u == 2
    y =uint8('300          ');
else
    if u< 0.5 
    y = uint8('Turning Left ');
    else
    y= uint8('Turning Right');
    end
end
____________________________________________________________________________________________________________________________

Servo motor Position function:
function y = fcn(A)
if A == 2
    y = 90;
else
    if A < 0.5
        y = 0;
    else
        y = 180;
    end
end


	